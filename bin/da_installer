#!/bin/bash

#set -x

PROG=$(basename $0)
JENTREPRISE_CONF="/opt/ubi-jentreprise/generated/conf/device"

usage() {
	echo "usage: $PROG <install|uninstall> <device adaptor directory>"
	echo
	echo "install or un-install MSA device adaptors"
}

main() {
	cmd=$1
	shift
	case $cmd in
		""|-h|--help)
			usage
			;;
		-i|install)
			da_install "$1" "$2"
			;;
		#-u|uninstall)
		#	da_uninstall "$1" "$2"
		#	;;
		#-u|deactivate)
		#	da_deactivate "$1" "$2"
		#	;;

		*)
			fatal "unknown command: $1"
			;;
	esac
}

da_install() {
	DA_DIR=$1
	if [ ! -d "$DA_DIR" ]; then
		fatal "device-adaptor dir not found: $DA_DIR"
	fi
	CONF_DIR=$2
	if [ -z "$CONF_DIR" ]; then
		CONF_DIR="conf"
	fi
	[ -d "$DA_DIR/$CONF_DIR" ] || \
		fatal "device-adaptor config dir not found: $DA_DIR/$CONF_DIR"
	
	DA_SRC_PATH=`basename $DA_DIR`

	read_properties_files
	#check_create_model
	check_sms_router_conf
	update_files
}

da_uninstall() {
	DA_DIR=$1
	if [ ! -d "$DA_DIR" ]; then
		fatal "device-adaptor dir not found: $DA_DIR"
	fi
	CONF_DIR=$2
	if [ -z "$CONF_DIR" ]; then
		CONF_DIR="conf"
	fi
	[ -d "$DA_DIR/$CONF_DIR" ] || \
		fatal "device-adaptor config dir not found: $DA_DIR/$CONF_DIR"
	
	DA_SRC_PATH=basename $DA_DIR

	read_properties_files
	check_sms_router_conf

	target_file="$JENTREPRISE_CONF/custom/models.properties"
	default_file="$JENTREPRISE_CONF/models.properties"


	keyname="${MOD_ID},${MAN_ID}"

	sed "/^$keyname/d" $target_file
	sed "/^$keyname/d" $default_file

}
#WIP#
da_deactivate() {
	DA_DIR=$1
	if [ ! -d "$DA_DIR" ]; then
		fatal "device-adaptor dir not found: $DA_DIR"
	fi
	CONF_DIR=$2
	if [ -z "$CONF_DIR" ]; then
		CONF_DIR="conf"
	fi
	[ -d "$DA_DIR/$CONF_DIR" ] || \
		fatal "device-adaptor config dir not found: $DA_DIR/$CONF_DIR"
	
	DA_SRC_PATH=basename $DA_DIR

	read_properties_files
	check_sms_router_conf

	target_file="$JENTREPRISE_CONF/custom/models.properties"
	default_file="$JENTREPRISE_CONF/models.properties"


	keyname="${MOD_ID},${MAN_ID},,1-9]+,"

	# replace 15010202,1,"ASA Generic","H",0 by 15010202,1,"ASA Generic","H",1

	sed "/^$keyname/d" $target_file
	sed "/^$keyname/d" $default_file
}

update_files() {
	update_manufacturers_properties
	update_models_properties
	#update_sdExtendedInfo_properties
	#update_manageLinks_properties
	#update_ses_properties
	#update_repository_properties
}


check_create_model() {
	target_file="$JENTREPRISE_CONF/custom/models.properties"
	keyname="${MOD_ID},${MAN_ID}"

	if [ -f $target_file ]; then
		if grep  "$keyname" $target_file; then 
		echo "Vendor ${MAN_NAME} [${MAN_ID}], model ${MOD_NAME} [${MOD_ID}] found in $target_file. "
		echo "Exit intall"
		exit 0
		fi
	fi

}

update_manufacturers_properties() {
	echo "update manufacturers_properties config for vendor ${MAN_NAME} [${MAN_ID}]."
	
	target_file="$JENTREPRISE_CONF/custom/manufacturers.properties"

	mkdir -p "$JENTREPRISE_CONF/custom"

	if [ ! -f $target_file ]; then
		echo "id,name,supported" > $target_file
		fixup_no_newline_at_eof $target_file
	fi

	grep -q "^$MAN_ID," $target_file && return 0

	fixup_no_newline_at_eof $target_file

	echo '>> update  '$target_file' with '$MAN_ID',"'$MAN_NAME'",1'
	echo $MAN_ID',"'$MAN_NAME'",1' >> $target_file

}

update_models_properties() {
	echo "update models_properties config for vendor ${MAN_NAME} [${MAN_ID}], model ${MOD_NAME} [${MOD_ID}]."

	target_file="$JENTREPRISE_CONF/custom/models.properties"

	mkdir -p "$JENTREPRISE_CONF/custom"

    if [ ! -f $target_file ]; then
		echo "id,manId,name,type,obsolete,familyId,managed,Utm,proxy,wizard,ztdOverPortConsole,backup,generateTemplate,restore,proxyWeb,category,detailedReportMail,detailedReportFirewall" > $target_file
		fixup_no_newline_at_eof $target_file
	fi

	grep -q "^$MOD_ID," $target_file && return 0

	fixup_no_newline_at_eof $target_file


	echo '>> update  '$target_file' with '$MOD_ID,$MAN_ID,'"'$MOD_NAME'","H",0,0,1,0,0,1,0,1,0,1,0,U,0,0'
	echo $MOD_ID,$MAN_ID,'"'$MOD_NAME'","H",0,0,1,0,0,1,0,1,0,1,0,U,0,0' >> $target_file

}

fixup_no_newline_at_eof() {
  ## ファイル末尾に改行がない場合の対処
  [ ! -f $1 ] && echo > $1
  /bin/cat "$1" | awk '{print}' > /tmp/msa.$$
  /bin/cp -p /tmp/msa.$$ "$1"
  /bin/rm -f /tmp/msa.$$
}

read_properties_files() {
	device_properties="$CONF_DIR/device.properties"
	[ -f "$DA_DIR/$device_properties" ] || \
		fatal "file not found: $device_properties"

	MAN_ID=$(read_property "$device_properties" "manufacturer.id")
	MOD_ID=$(read_property "$device_properties" "model.id")
	MOD_NAME=$(read_property "$device_properties" "model.name")
	MAN_NAME=$(read_property "$device_properties" "manufacturer.name")
}

check_sms_router_conf() {
	sms_router_conf="$CONF_DIR/sms_router.conf"
	[ -f "$DA_DIR/$sms_router_conf" ] || \
		fatal "file not found: $sms_router_conf"

	spec=$(cat $DA_DIR/$sms_router_conf | egrep '^model\s' | awk '{print $2}')
	man_id=$(cut -d : -f 1 <<< "$spec")
	mod_id=$(cut -d : -f 2 <<< "$spec")

	[ "$man_id" = "$MAN_ID" ] || \
		fatal "inconsistent definition: man_id=$man_id MAN_ID=$MAN_ID"
	[ "$mod_id" = "$MOD_ID" ] || \
		fatal "inconsistent definition: mod_id=$mod_id MOD_ID=$MOD_ID"
}

read_property() {
	file=$1
	prop=$2
	cat $DA_DIR/$file | sed 's:\r$::g' \
			  | egrep "^$prop" | cut -d = -f 2 | tr -d ' '
}

tolower() {
	echo $1 | tr '[A-Z]' '[a-z]'
}

toupper() {
	echo $1 | tr '[a-z]' '[A-Z]'
}

fatal() {
	echo $* >&2
	exit 1
}


main "$@"
